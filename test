#!/usr/bin/env bash

norm() {
	fd '^(libft.h|ft_[^\.]+\.c)$' -X norminette
}

color_blue="\033[0;34m"
color_red="\033[0;31m"
color_reset="\033[0m"

failed=""

make test || exit 1
for binary in ./debug/*; do
	if [ -f $binary ]; then
		basename="$(basename $binary)"
		test_file="$basename.test.c"
		success=true

		echo -e "${color_blue}===> $basename${color_reset}"
		if [ "$1" == "--quick" ] || grep -q "@disable-valgrind" "$test_file"; then
			$binary || success=false
		else
			valgrind --quiet --error-exitcode=42 $binary || success=false
		fi

		must_exist=$(cat "$test_file" | \
					grep -E '^TEST\(\s*([a-z_]+).*$' | \
					sed -E 's/^TEST\([[:space:]]*([a-z_]+).*$/\1/g')
		for func in $must_exist; do
			if  ! grep -q "RUN[0-9]*($func" "$test_file"; then
				echo -e "${color_red}RUN missing: $func${color_reset}"
				success=false
			fi
		done
		if [ $success == false ]; then
			failed="$failed$(basename $binary) "
		fi
	fi
done

if [ -n "$failed" ]; then
	echo >&2
	echo -e "${color_red}failed tests: $failed${color_reset}" >&2
fi

if norm | grep -q -E '^(Error|Warning)'; then
	echo >&2
	echo -e "${color_red}norm failed:${color_reset}" >&2
	norm
fi
